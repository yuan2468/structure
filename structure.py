adj=["优秀", "美","严峻","必要","重要","极端", "可靠", "准确", "正确","快乐", "教训","诚实", "真","消极","自卑","轻","辣",
     "骄傲","粗鲁","矮", "大", "担心", "冷", "好", "害怕", "少", "快", "多","远","不","上","下","东","从严","上", "下", "前", "后", "内", "外", "里", "外",
     "慢", "红", "绿", "湿","老","紫", "胖", "滚","热","蓝", "重", "长", "近","假","西","右", "少","左","高"]
noun=["品德","经验",  "经验","问题", "缺点", "优点", "错误","水果", "蔬菜", "颜色", "袜子", "鞋子", "帽子",
       "裤子", "衣服", "同学", "同事", "色彩","感情","规则","今天","傣族","汉族","下午","中午","早上","晚上",
      "女儿", "儿子", "妹妹", "弟弟", "姐姐", "哥哥", "妻子", "规则", "职业", "恋爱", "数量", "美国", "英国", 
      "法国", "同意","雨","雪","冰雹","明天","谢谢","根源","美国","英国","法国","关系","别人","房子",
      "中国", "深圳", "北京市", "动物", "房子", "民族", "气候", "气象", "水", "生活","要求", "饭"]
verb=["工作","端正","看", "买","对不起", "看", "说", "来", "爱", "反对", "喝", "去", "需要", "愿", "坐", "听", 
      "借", "加", "打", "提醒", "认识","学习","穿","抱歉","担心","再见","借","害怕","打","要求",
      "开", "走", "跟", "跳", "除", "乘","吃"]
adv=["一会儿", "都", "一定", "当然", "始终","能","必要", "真",  "现在", "如何", "另外", 
      "最后", "最近", "比","完了","太","不久","其实","可能","同时","好像","如果","最",
     "每天", "终于", "继续", "既然", "超级"]
pron=["我", "你", "我们", "你们", "自己"]
#代词
conj=["又","和", "或者", "但是", "所以", "因为", "然后", "虽然", "如果", "不仅", "而且", "无论", "只要",
       "不管", "既然", "如何","要","加", "等于",
      "即使", "换句话说", "与其", "就", "只有", "不但", "才", "也", "还", "至于", "并且"]
#连词
prep=["请","到","还","的","来","将", "给", "中", "以", "用", "关于", "对于", "从", "到", "或者",
      "向", "为", "通过", "和", "与", "了", "是","什么", "哪里", "这", "那", "这些", "哪些", "哪儿","那里",
      "至", "因为", "对", "在",  "跟", "除"]
#介词
num=["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "百", "千", "万", "亿","件","个"] 

lc = ["件","个"] 


def writetxt(s):
    file = open(r"D:\AI\tf-t\data\data\sentence_mapper1.txt","a",encoding="utf-8")
    file.write(s)
    file.close()
def structure():
    for i in conj:
        for j in pron:
            for p in verb:
                sentence = i+','+j+','+p+'\n'
                writetxt(sentence)

def main():
    #print(len(adj))
    #print(len(noun))
    #print(len(verb))
    #print(len(adv))
    #print(len(pron))
    #print(len(conj))
    #print(len(prep))
    #print(len(num))
    structure()
main()